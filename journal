Dec 15 2022:
- Started to build a Django app for the student management system
- started with mattlaymon.com and finally moved to w3schools django tutorial
- Before this I started an account with github for my webtri account
	- I also set up the ssh keys with ssh-keygen tool
	- Then the key was added to the config file in the ssh secret directory so as to enable usuage of different keys for different repos from the same machine

- I created a seperate directory for my project named "StudnetManagementSystem"
- A virtual environment was created with the command python -m venv myproject
- This was activaed using the command source /bin/activate
- Once inside the virtual environment, Django was installed with the command "pip install Django". This installed the latest version of Django.
- The command "Deactivate" shall be used to come out of the virtual environment
- Now inside the "StudentManagementSystem" Directory, i ran the command "django startproject sms". This created a directory "sms" with a file named "mange.py" and a directory "sms"
- To check if my project worked, I went into the "sms" directory and ran "python manage.py runserver". This created a server at 127.0.0.1:8000. I visited this page and saw that Django was running 

Jan 1, 2023

- Page containing all the students details in a table has been created.
- From the same page, the viewer can update the record and delete the record

- Now I have learnt that, a model can be defined in the models.py file. This can be used to define ModelForms. ModelForms have a inner class Meta, which have attributes called "Model" - the name of the model that is going to used for forming the form, another attribute called "fields" - the fields that are to be rendered.

- In the views, if a view is being called by a POST method, then all the parameters are send to this view as a "QueryDict"object and can be accessed by calling request.POST

- TODO:
	- convert the other form objects to ModelForm ones,
	- create a page with a form  where marks of all students of a particular test could be entered
		- this page should have zero as default entries
	- create a page which lists all tests,
		- this page should have the function such that when a test is clicked, it should take us to the page where the marks of all students of this test should be entered.
	- create a similar page as that of "users" where all practical marks of all students are supposed to be seen
		- this page will later go on to contain all the attendances for all students
		- this page should have functionalities like updating a students mark, attendance etc
			- here since marks and attendance of a student are from different table, a idea of using form groups should be thought off

Jan 6 2023:
Cleaned up my project. Now the user app folder contains 2 view files. ChatGPT is simply awesome. Only thing you will have to import the correct view file.
To do:
	- To create a form where i can enter all student marks via formset


Jan 7 2023 00:01
I have created a form from where i can enter all student marks, the form is giving me a post which is processable, ie i can iterate thorugh two list simultaneously to find which student secured which marks. After all django desingerrs would have thought about it.

	_ i need to write code to loop throught the list and save it to the database

Jan 8 2023 00:41
The view function for updating a student mark for a particular test has been created.
	- I need to add implement a similar page for attendance
	- I need to create login pages now


